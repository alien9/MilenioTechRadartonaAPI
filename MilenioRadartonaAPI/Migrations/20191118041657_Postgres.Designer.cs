// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MilenioRadartonaAPI.Context;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MilenioRadartonaAPI.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20191118041657_Postgres")]
    partial class Postgres
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("MilenioRadartonaAPI.Models.Acesso", b =>
                {
                    b.Property<int>("AcessoId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.Property<int?>("RelatorioReqId");

                    b.Property<int?>("RequisicaoInfosId");

                    b.Property<string>("Url")
                        .IsRequired();

                    b.HasKey("AcessoId");

                    b.HasIndex("RelatorioReqId");

                    b.HasIndex("RequisicaoInfosId");

                    b.ToTable("Acessos");
                });

            modelBuilder.Entity("MilenioRadartonaAPI.Models.Chave", b =>
                {
                    b.Property<int>("ChaveId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Authenticated");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("Expiration");

                    b.Property<string>("Message");

                    b.Property<string>("Token");

                    b.Property<int>("UsuarioId");

                    b.HasKey("ChaveId");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("Chaves");
                });

            modelBuilder.Entity("MilenioRadartonaAPI.Models.DiasAutenticados", b =>
                {
                    b.Property<int>("DiasAutenticadosId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DiaAutenticado");

                    b.Property<int?>("RequisicaoInfosId");

                    b.HasKey("DiasAutenticadosId");

                    b.HasIndex("RequisicaoInfosId");

                    b.ToTable("DiasLogados");
                });

            modelBuilder.Entity("MilenioRadartonaAPI.Models.RelatorioReq", b =>
                {
                    b.Property<int>("RelatorioReqId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Evento");

                    b.Property<DateTime>("Fim");

                    b.Property<DateTime>("Inicio");

                    b.Property<double>("Lat");

                    b.Property<double>("Lon");

                    b.Property<double>("Raio");

                    b.HasKey("RelatorioReqId");

                    b.ToTable("RelatoriosReqs");
                });

            modelBuilder.Entity("MilenioRadartonaAPI.Models.RequisicaoInfos", b =>
                {
                    b.Property<int>("RequisicaoInfosId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AcessoId");

                    b.Property<int>("DiasAutenticadosId");

                    b.Property<int>("QtdReqDiaMax");

                    b.Property<int>("QtdReqFeitasNoDia");

                    b.Property<int>("UsuarioId");

                    b.HasKey("RequisicaoInfosId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Requisicoes");
                });

            modelBuilder.Entity("MilenioRadartonaAPI.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Bloqueado");

                    b.Property<string>("Celular");

                    b.Property<DateTime>("CriacaoDeConta");

                    b.Property<string>("Email");

                    b.Property<string>("Nome");

                    b.Property<int>("ReqInfosId");

                    b.Property<string>("TipoUsuario");

                    b.Property<DateTime>("UltimaMudancaDeSenha");

                    b.HasKey("UsuarioId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("MilenioRadartonaAPI.Models.Acesso", b =>
                {
                    b.HasOne("MilenioRadartonaAPI.Models.RelatorioReq", "Relatorio")
                        .WithMany()
                        .HasForeignKey("RelatorioReqId");

                    b.HasOne("MilenioRadartonaAPI.Models.RequisicaoInfos")
                        .WithMany("Acessos")
                        .HasForeignKey("RequisicaoInfosId");
                });

            modelBuilder.Entity("MilenioRadartonaAPI.Models.Chave", b =>
                {
                    b.HasOne("MilenioRadartonaAPI.Models.Usuario", "Usuario")
                        .WithOne("Chave")
                        .HasForeignKey("MilenioRadartonaAPI.Models.Chave", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MilenioRadartonaAPI.Models.DiasAutenticados", b =>
                {
                    b.HasOne("MilenioRadartonaAPI.Models.RequisicaoInfos")
                        .WithMany("DiasAutenticados")
                        .HasForeignKey("RequisicaoInfosId");
                });

            modelBuilder.Entity("MilenioRadartonaAPI.Models.RequisicaoInfos", b =>
                {
                    b.HasOne("MilenioRadartonaAPI.Models.Usuario", "Usuario")
                        .WithMany("ReqInfos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
